diff -up abuse-0.9.0/src/CMakeLists.txt.omv~ abuse-0.9.0/src/CMakeLists.txt
--- abuse-0.9.0/src/CMakeLists.txt.omv~	2022-10-24 14:24:05.559810025 +0200
+++ abuse-0.9.0/src/CMakeLists.txt	2022-10-24 14:24:11.623847305 +0200
@@ -87,7 +87,7 @@ target_link_libraries(abuse lisp)
 target_link_libraries(abuse sdlport)
 target_link_libraries(abuse imlib)
 target_link_libraries(abuse net)
-target_link_libraries(abuse SDL2::SDL2)
+target_link_libraries(abuse SDL2)
 target_link_libraries(abuse SDL2::SDL2_mixer)
 if(OPENGL_FOUND)
     target_link_libraries(abuse ${OPENGL_LIBRARIES})
diff -up abuse-0.9.0/src/net/fileman.cpp.omv~ abuse-0.9.0/src/net/fileman.cpp
--- abuse-0.9.0/src/net/fileman.cpp.omv~	2022-10-24 14:22:56.995388923 +0200
+++ abuse-0.9.0/src/net/fileman.cpp	2022-10-24 14:23:14.988499362 +0200
@@ -307,7 +307,7 @@ file_manager::remote_file::remote_file(n
   next=Next;
   open_local=0;
 
-  uint8_t sizes[3]={ CLIENT_NFS,strlen(filename)+1,strlen(mode)+1};
+  uint8_t sizes[3]={ CLIENT_NFS,static_cast<uint8_t>(strlen(filename)+1),static_cast<uint8_t>(strlen(mode)+1)};
   if (sock->write(sizes,3)!=3) { r_close("could not send open info"); return ; }
   if (sock->write(filename,sizes[1])!=sizes[1]) { r_close("could not send filename"); return ; }
   if (sock->write(mode,sizes[2])!=sizes[2]) { r_close("could not send mode"); return ; }
diff -up abuse-0.9.0/src/sdlport/CMakeLists.txt.omv~ abuse-0.9.0/src/sdlport/CMakeLists.txt
--- abuse-0.9.0/src/sdlport/CMakeLists.txt.omv~	2022-10-24 14:24:21.065905363 +0200
+++ abuse-0.9.0/src/sdlport/CMakeLists.txt	2022-10-24 14:24:23.452920043 +0200
@@ -18,6 +18,6 @@ include_directories(
     ${abuse_SOURCE_DIR}/src/imlib
 )
 
-target_link_libraries(sdlport SDL2::SDL2 SDL2::SDL2_mixer)
+target_link_libraries(sdlport SDL2 SDL2::SDL2_mixer)
 #
 #CPPFLAGS = @CPPFLAGS@ -DNO_CHECK -DASSETDIR=\"$(assetdir)\"
diff -up abuse-0.9.0/src/sdlport/hmi.cpp.omv~ abuse-0.9.0/src/sdlport/hmi.cpp
--- abuse-0.9.0/src/sdlport/hmi.cpp.omv~	2022-10-24 14:23:28.433581920 +0200
+++ abuse-0.9.0/src/sdlport/hmi.cpp	2022-10-24 14:23:38.936646431 +0200
@@ -299,7 +299,7 @@ uint8_t* load_hmi(char const *filename,
     uint8_t num_tracks = (next_offset - offset_tracks) / sizeof(uint32_t);
 
     // Write Midi file header
-    uint8_t midi_header[] = { 0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, (num_tracks + 1), 0x00, 0xC0 };
+    uint8_t midi_header[] = { 0x4D, 0x54, 0x68, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x01, 0x00, static_cast<uint8_t>(num_tracks + 1), 0x00, 0xC0 };
     memcpy(output_buffer_ptr, midi_header, 14);
     output_buffer_ptr += 14;
 
